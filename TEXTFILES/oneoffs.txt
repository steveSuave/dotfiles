# tap for click in touchpad

new file /etc/X11/xorg.conf.d/xx-touchpad.conf with contents:
```
Section "InputClass"
        Identifier "touchpad"
        MatchIsTouchpad "on"
        Driver "libinput"
        Option "Tapping" "on"
        Option "TappingButtonMap" "lrm"
EndSection
```
or
# xinput list-props etc to find numbers etc
xinput set-prop 12 321 1

# repeated keypress
xset r on

================================================================

xrandr --output DP2 --auto --above eDP1
(VGA-1 , DVI-I-1)
xrandr --output HDMI-1 --same-as VGA-1
xrandr --output HDMI-1 --left-of VGA-1
xrandr --output HDMI-1 --right-of VGA-1

gtf 1280 800 60
xrandr --newmode "1280x800_60.00"  83.46  1280 1344 1480 1680  800 801 804 828  -HSync +Vsync
xrandr --addmode VGA1 1280x800_60.00
xrandr --output VGA1 --mode 1280x800_60.00

xrandr --output LVDS1 --mode 1280x800_60.00
xrandr --addmode LVDS1 1280x800_60.00
xrandr --output LVDS1 --mode 1280x800_60.00

================================================================

docker exec -u root -t -i 2122eb8f01f /bin/bash
docker cp install-letsencrypt-in-jdk.sh 2122eb8f01f5:/install-letsencrypt-in-jdk.sh

find . -mindepth 3 -type d ! -regex '^.*/ZKC\(/.*\)?'
find . -mindepth 3 -type d ! -regex '^.*/ZKC\(/.*\)?' -exec echo rm -r '{}' \;

scp -i $HOME/Projects/UAT_PPKs/UAT-Admin.pem ./ear-1.1-SNAPSHOT.ear ec2-user@ec2-xxx.eu-west-1.compute.amazonaws.com:/opt/app-deploy/
ssh -i $HOME/Projects/UAT_PPKs/UAT-Admin.pem ec2-user@ec2-xxx.eu-west-1.compute.amazonaws.com '/opt/glassfish3/glassfish/bin/asadmin deploy /opt/app-deploy/ear-1.1-SNAPSHOT.ear'

wget -c --no-cookies --no-check-certificate --header Cookie: oraclelicense=accept-securebackup-cookie https://download.oracle.com/otn-pub/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jdk-8u251-linux-x64.tar.gz

svn log | less
svn diff -c r10282

seahorse
gnome-keyring-daemon -r -d

# generate sql insert statement from (column_name, column_value, db, table)
docker exec -i "deps_mysql_1" mysqldump -p1111 --compact --no-create-info  --where="flowid='A-FLOW'" --databases some-db --tables some-table 2>/dev/null

================================================================

while read -r line; do sap 1 "$line"; done < <(cat $gtlog | sort --random-sort)

# bach stephen farr organ chorales partitas
mpv --no-video 'https://www.youtube.com/playlist?list=OLAK5uy_lLsCqp7iDAIoc_NCpyr-pJx3uxut-r44k'

# the goon show
mpv --no-video 'https://www.youtube.com/playlist?list=PLZJfXozPB7csMovJB28KxTXCUyixDmzj1'
mpv --no-video 'https://www.youtube.com/playlist?list=PLDMceejQ40NBYsU9iFiiBFCmAzAtPDtMu'

================================================================

dconf write /org/gnome/desktop/input-sources/xkb-options "['grp:alt_space_toggle','grp_led:scroll']"
# dconf read ...
man xkeyboard-config # for other values

gsettings set org.gnome.desktop.input-sources xkb-options "['grp:alt_shift_toggle', 'grp_led:scroll', 'lv3:switch']"

(
    $ gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<Alt>Shift_L']"
    $ gsettings get org.gnome.desktop.wm.keybindings switch-input-source-backward
    >['<Super>space']

    Examples of other key bindings:
        <Primary>space, Alt_R, <Shift>Control_R, <Shift><Super>space
)
================================================================

gsettings list-recursively | sort

gsettings set org.gnome.desktop.background primary-color '#3f0705'

gsettings get org.gnome.desktop.screensaver primary-color -> '#023c88'
gsettings set org.gnome.desktop.screensaver primary-color '#3f0705'

# secondary is used in conjuction with "gradient" color-shading-type

================================================================

3856189
/sys/class/backlight/intel_backlight/brightness
added /etc/X11/xorg.conf and binding to i3 config to make it work

echo 100 | sudo tee /sys/class/backlight/intel_backlight/brightness

================================================================

systemctl set-default multi-user.target
systemctl enable getty@tty2

or

GRUB_CMDLINE_LINUX="resume=UUID=1c4ab846-3ec0-44ec-b932-82147050180e rhgb quiet"

from /etc/default/grub
erase "rhgb" and then run
grub2-mkconfig

================================================================

When eightBitMeta=true (this is default)
alt+dot = ® (Registered trademark)
alt+0 = ° (degree)
alt+q = ñ
and there are many of these accented characters.

When eightBitMeta=false (in bash)
(xterm -xrm '*eightBitInput: false')
alt+dot = insert-last-argument
alt+0 = (arg: 0). same as ESC+0
alt+q (and others) =nothing

There are long discussion which one should be default: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=326200

================================================================

systemctl enable --user emacs
systemctl start --user emacs

================================================================

if dual boot not working as expected then
add to /etc/default/grub
GRUB_DISABLE_OS_PROBER=false

================================================================

sudo dd bs=4M if=/path/to/iso of=/dev/sdX status=progress && sync

sudo wipefs --al /dev/sdX
sudo cfdisk /dev/sdX
 -- DOS
 -- NEW
 -- keep max size
 -- primary
 -- write
 -- quit

sudo fdisk -l # to see if partition is created

sudo mkfs.vfat -n 'SomeLabel' /dev/sdX1

================================================================

sudo apt install emacs i3 feh compton pcmanfm go xcalib mpv zsh
# scheme smlnj racket lua git pavucontrol curl wget firefox bc
# irssi man ncdu xclip screen file htop unzip xmllint jq pup
# rsync openssh-server samba tree rlwrap python3-pip
# ifconfig nc netstat

================================================================
DEBIAN WIFI
-----------

Using IWD
While IWD is often a backend for more comprehensive connection managers, it can also be used fully standalone, and is completely distinct from wpa_supplicant. With virtually no extra dependencies, it's one of the lightest and simplest methods for configuring wireless networking. See the IWD section for more information, and view the IWD.NETWORK(5) manpage if you're interested in writing manual connection files for IWD rather than going through IWCtl.
Using ifupdown
These instructions require and make use of ifupdown, iproute2, wpasupplicant (For WPA2 support), iw, and wireless-tools. Ensure you have all of these installed before continuing. You also might be interested in the instructions below that only use ifupdown and wpasupplicant, along with using a more advanced configuration. See #wpasupplicant
Find your wireless interface and bring it up: (NOTE: wlp2s0 is an example, you will need to make sure to use the correct device name for your system)

# ip a
# iw dev
# ip link set wlp2s0 up

Scan for available networks and get network details (If you already know your wifi network id/ESSID, you can skip this step):

$ su -l
# iwlist scan

Now edit /etc/network/interfaces. The required configuration is much dependent on your particular setup. The following example will work for most commonly found WPA/WPA2 networks:

# my wifi device
allow-hotplug wlp2s0
iface wlp2s0 inet dhcp
        wpa-ssid ESSID
        wpa-psk PASSWORD

Bring up your interface and verify the connection:
# ifup wlp2s0
# iw wlp2s0 link
# ip a
You can manually bring your interface up and down with the ifup and ifdown commands. If you added allow-hotplug wlp2s0 as in the example above, the interface will be brought up automatically at boot.
For further information on available configuration options, see man interfaces, man iw, man wireless and /usr/share/doc/wireless-tools/README.Debian.

----------------------------------------------------------------
Elsewhere:

sudo ip link set dev wlp4s0 up
sudo iwlist wlp4s0 scan | grep ESSID
sudo apt install wpasupplicant
wpa_passphrase your-ESSID your-wifi-passphrase | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf
sudo wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant.conf -i wlp4s0
sudo iwconfig
sudo wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlp4s0  # -B for background

Although we’re authenticated and connected to a wireless network, we don’t have an IP address yet. To obtain a private IP address from DHCP server, use the following command:

sudo dhclient wlp4s0

Now your wireless interface has a private IP address, which can be shown with:

ip addr show wlp4s0

Now you can access the Internet. To release the private IP address, run

sudo dhclient wlp4s0 -r

Auto-Connect At System Boot Time
--------------------------------
sudo cp /lib/systemd/system/wpa_supplicant.service /etc/systemd/system/wpa_supplicant.service

Edit the file with a command-line text editor, such as Nano.

sudo nano /etc/systemd/system/wpa_supplicant.service

Find the following line.

ExecStart=/sbin/wpa_supplicant -u -s -O /run/wpa_supplicant

Change it to the following. Here we added the configuration file and the wireless interface name to the ExecStart command.

ExecStart=/sbin/wpa_supplicant -u -s -c /etc/wpa_supplicant/wpa_supplicant.conf -i wlp4s0

It’s recommended to always try to restart wpa_supplicant when failure is detected. Add the following right below the ExecStart line.

Restart=always

Save and close the file. (To save a file in Nano text editor, press Ctrl+O, then press Enter to confirm. To exit, press Ctrl+X.) Then reload systemd.

sudo systemctl daemon-reload

Enable wpa_supplicant service to start at boot time.

sudo systemctl enable wpa_supplicant.service

We also need to start dhclient at boot time to obtain a private IP address from DHCP server. This can be achieved by creating a systemd service unit for dhclient.

sudo nano /etc/systemd/system/dhclient.service

Put the following text into the file.

[Unit]
Description= DHCP Client
Before=network.target
After=wpa_supplicant.service

[Service]
Type=forking
ExecStart=/sbin/dhclient wlp4s0 -v
ExecStop=/sbin/dhclient wlp4s0 -r
Restart=always

[Install]
WantedBy=multi-user.target

Save and close the file. Then enable this service.
sudo systemctl enable dhclient.service

================================================================
# delete images older than 6 months ago; 4320h = 24 hour/day * 30 days/month * 6 months
docker image prune --all --filter "until=4320h"

================================================================
AWK

Would like to print unique lines based on first field , keep the first occurrence of that line and remove duplicate other occurrences.

awk -F, '!seen[$1]++' Input.csv

================================================================
SAMBA mount from command line
sudo mount -t cifs -o rw,vers=3.0,credentials=/root/.smbcredentials //192.168.1.9/hdshare ~/samba-hdshare/
