#########
# ALIAS #
#########

alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

alias mysql.start="sudo /usr/local/mysql/support-files/mysql.server start"
alias mysql.stop="sudo /usr/local/mysql/support-files/mysql.server stop"
alias mysql.restart="sudo /usr/local/mysql/support-files/mysql.server restart"
alias mysql.status="sudo /usr/local/mysql/support-files/mysql.server status"

alias kk='tput reset' #"clear && printf '\e[3J'"
alias rt='cd;kk'
alias ed='rlwrap ed'
alias lsa='ls -lahF'
alias l1='ls -1thF'
alias ll1='ls -1thF | head'
alias grep='grep --color=auto'
alias dush='du -sh'
alias ducks='du -cks * | sort -rn | head'
alias tell='kill'
alias rmi="rm -i"
alias rmt="rmtrash"
alias py=python3
alias cmus='screen -S cmus cmus'
alias nboat=newsboat
alias vboat="newsboat -u $HOME/.newsboat/yturls -c $HOME/.newsboat/ytcache.db -C $HOME/.newsboat/ytconfig"
alias boat='nboat && vboat'
alias hu='last | less'
alias son='xset s on && xset +dpms'
alias soff='xset s off && xset -dpms'
alias 1='kill %1'

alias temp='echo $(bc <<< "$(cat /sys/devices/platform/coretemp.0/hwmon/hwmon*/temp*_input | sort -nr | head -1) / 1000")Â°C'
alias sysus='systemctl suspend'

alias dstop='docker stop $(docker ps -a -q)'
alias drm='docker rm $(docker ps -a -q)'
alias dri='docker rmi $(docker images -q)'
alias drv='docker volume prune'
alias drall='docker system prune --all --volumes' # --force
# delete images older than 6 months ago; 4320h = 24 hour/day * 30 days/month * 6 months
alias diprune='docker image prune --all --filter "until=4320h"'

alias ytd='youtube-dl -o "%(title)s.%(ext)s"'
alias ytdv='youtube-dl -o "%(title)s.%(ext)s" -f mp4'
alias ytda='youtube-dl -o "%(title)s.%(ext)s" -x --audio-format mp3'
#alias ytdp='youtube-dl -o "%(playlist_index)s - %(title)s.%(ext)s"' # -f mp4
alias ytdp='yt-dlp -o "%(playlist_index)s - %(title)s.%(ext)s" -f mp4'
alias ytds='youtube-dl --write-sub --write-auto-sub --sub-lang en --skip-download' # --sub-format ass/srt/best

alias mpvl='mpv --af=pan="[stereo|c0=c0|c1=c0]"'
alias mpvr='mpv --af=pan="[stereo|c0=c1|c1=c1]"'
alias mpvm='mpv --audio-channels=1'

alias mpv360='mpv --ytdl-format="[height<=360]/best"'

alias cup='nmcli --ask con up id client'
alias cdown='nmcli con down id client'
alias pull='git pull --tags --rebase origin master'
alias pbcopy="xclip -selection c"
alias pbpaste="xclip -selection clipboard -o"

alias irc='screen -S irc irssi;'
alias cafrc='caffeinate -w $(pgrep irssi)&'
alias caf='screen -dmS caf caffeinate -d'

alias w3im="startx" # $HOME/.config/i3/xinit"
#alias emacs='emacsclient -n --create-frame --alternate-editor=""'
alias magit="emacs --eval='(magit-status)'"
alias remacsp='rm ~/.emacs.d/.lsp-session-v1 && rm -r ~/.emacs.d/workspace/'
alias relsp='rm ~/.emacs.d/.lsp-session-v1 &&
             rm -rf ~/.emacs.d/.cache/ &&
             rm -rf ~/.emacs.d/eclipse.jdt.ls &&
             rm -rf ~/.emacs.d/workspace &&
             rm -rf ~/.emacs.d/straight/repos/lsp-* &&
             rm -rf ~/.emacs.d/straight/repos/helm-lsp &&
             rm -rf ~/.emacs.d/straight/repos/treemacs &&
             rm -rf ~/.emacs.d/straight/repos/dap-mode'

alias prot='sudo renice -n -20 -p $(pgrep -f karoto)'
alias kar='kill -SIGINFO $(pgrep -f karoto)'
alias dodis='kill -SIGWINCH $(pgrep -f karoto)'
alias fir='kill -SIGUSR1 $(pgrep -f karoto)'
alias sec='kill -SIGUSR2 $(pgrep -f karoto)'
adiar() {
        { sleep $(( $1 * 60 )) && dodis; }&
}

stty -ixon # use C-s for forward search instead of freezing the keyboard
export LESS=iSR #FXN

if [[ -f ~/.bin/git-prompt.sh ]]; then
    source ~/.bin/git-prompt.sh
    GIT_PS1_SHOWCOLORHINTS=1 # Add colours to the indicators
    GIT_PS1_SHOWDIRTYSTATE=1 # Show unstaged (*) and staged (+) changes next to the branch
    GIT_PS1_SHOWUNTRACKEDFILES=1 # Show untracked (%) changes
    GIT_PS1_SHOWSTASHSTATE=1 # Show stashed ($) changes
    GIT_PS1_SHOWUPSTREAM="auto verbose" # Show upstream changes
fi

#############
# FUNCTIONS #
#############

up() {
    local os=$(uname -s)
    case "$os" in
        Linux*)
            local distro=$(cat /etc/*-release)
            if [[ "$distro" =~ "fedora" ]]; then
                sudo dnf upgrade && sudo dnf autoremove
            elif [[ "$distro" =~ "ubuntu" ]] ||
                 [[ "$distro" =~ "debian" ]]; then
                sudo apt update && sudo apt upgrade && sudo apt autoremove && sudo apt autoclean
            fi
            ;;

        Darwin*)
            sudo port selfupdate && sudo port upgrade outdated && sudo port reclaim ;;
        *) return 1
    esac
}

run() {
        open -a "$1"
}

quit() {
        osascript -e "quit app \"$1\""
        #pkill -Ili "$1"
}

check() {
        pgrep -lf "$*"
}

cht() {
        curl -s https://cht.sh/"$*" | less
}

cl() {
        cd "$1" || return
        ls -haltFG
}

# Dictionary lookup
# Many more options, see:
# http://linuxcommando.blogspot.com/2007/10/dictionary-lookup-via-command-line.html
dict (){
    curl "dict://dict.org/d:$1:*"
}

# Merges, or joins multiple PDF files into "joined.pdf"
joinpdf () {
    gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=joined.pdf "$@"
}

# current airport weather report in a codified format
# metar LGAV gets data from El.Venizelos Athens airport
metar() {
    curl "https://tgftp.nws.noaa.gov/data/observations/metar/stations/$(original-awk '{ print toupper($0) }' <<< "$1").TXT"
}

# taf also provides codified weather data
# but includes some predictions
taf() {
    curl "https://tgftp.nws.noaa.gov/data/forecasts/taf/stations/$(original-awk '{ print toupper($0) }' <<< "$1").TXT"
}

# paste text online and get a link
# echo "something" | pst
pst() {
        curl -F 'f:1=<-' http://ix.io
}

# usage:
# sep "time to start cutting" "how much time to last from starting point" "vid-name" "output name"
# time format for $2 and $3: 00:00:00.00 or 238.7
# example: sep 00:45:23 00:05:00 "dr john guitar.mp4" nawlinz.mp4
sep() {
    ffmpeg -ss "$1" -t "$2" -i "$3" -c copy "$4"
}

## usage:
## -- gif "from-sec" "for-sec" "movie.mp4" "out"
## -- gif 538.7 5.2 the-trip.mkv stick
gif() {
    ffmpeg -ss "$1" -t "$2" -i "$3" -f gif "${4}.gif"
}

# mpv with subtitles
mpvs() {
    mpv --sub-auto=exact --sub-font-size=33 "$1";
}

# lo-fi
mpvlf() {
    mpv --ytdl-format=93 "$1"
}

#mpv --http-header-fields="Referer: https://www.nolive.me/sd0embed" https://ed-t5.edghst.me/plyvivo/so9e9okiledu7e3imew0/chunklist.m3u8
# temporary (!) workaround used for streams
# copy headers from network dev tools for chunk.m*
mpvc() {
    headers=$1
    host=$(grep 'Host:' <<< $headers | awk '{print $2}')
    resource=$(grep 'GET ' <<< $headers | awk '{print $2}')
    referer=$(grep 'Referer:' <<< $headers)
    mpv --http-header-fields="$referer" "https://${host}${resource}"
}

ran() {
    if [[ $2 ]]; then
        v="-v"
    fi
    sap $v $(( (RANDOM % 50) + 1 )) "$1"
    unset v
}

on() {
    if [[ -z $i ]]; then
       i=1
    fi
    if [[ $2 ]]; then
        v="-v"
    fi
    sap $v "$((i++))" "$1"
    unset v
}

ediff() {
    emacs --eval "(ediff-files \"$1\" \"$2\")" 2>/dev/null & disown
}

ff() {
    find . -iname "*$1*"
}

gret() { git grep -i "$@" $(git rev-list --all); }

gre() { grep --exclude-dir='target' --exclude-dir='.git' --exclude-dir='node_modules' --color=always -rn "$@" . | less -iSRN; }

gree() { grep --exclude-dir='target' --exclude-dir='.git' --exclude-dir='node_modules' -rn "$@" . ; }

bull() {
    git pull origin "$(git branch --show-current)"
}

fixup() {
    SHA=$(git rev-parse HEAD)
    git commit --fixup $SHA &&
        git rebase -i --autosquash $SHA~
}

#########
# RADIO #
#########

. ~/.bin/radio
